(* open Core
open Torch

let predict (input : float array array) =
  let input_tensor = Tensor.of_float2 input in
  let model = Module.load "model.pt" in
  Module.forward model [ input_tensor ] |> Tensor.to_float0_exn
;;

let () =
  let x =
    [| [| -0.6530; -0.8695; -0.8752; -0.8775; -0.8064; -0.8080 |]
     ; [| -0.6655; -0.9434; -0.9458; -0.9373; -0.8990; -0.9000 |]
     ; [| -0.6329; -0.9054; -0.9092; -0.9209; -0.8544; -0.8552 |]
     ; [| -0.6040; -0.8947; -0.8988; -0.8899; -0.8686; -0.8692 |]
     ; [| -0.5764; -0.9216; -0.9246; -0.9241; -0.9107; -0.9113 |]
     ; [| -0.6154; -0.9469; -0.9489; -0.9562; -0.9279; -0.9285 |]
     ; [| -0.6084; -0.9501; -0.9521; -0.9472; -0.9439; -0.9445 |]
     ; [| -0.6210; -0.9603; -0.9619; -0.9553; -0.9369; -0.9375 |]
     ; [| -0.6063; -0.9588; -0.9605; -0.9533; -0.9469; -0.9475 |]
     ; [| -0.6380; -0.9817; -0.9824; -0.9644; -0.9658; -0.9664 |]
     ; [| -0.6276; -0.9639; -0.9653; -0.9632; -0.9298; -0.9305 |]
     ; [| -0.6096; -0.9474; -0.9495; -0.9643; -0.9203; -0.9210 |]
    |]
  in
  let f = predict x in
  Core.print_string (Float.to_string f)
;; *)
